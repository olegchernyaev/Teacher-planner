Функция ПолучитьПрофиль()

Профиль = Новый ИнтернетПочтовыйПрофиль;

// SMTP сервер
Профиль.АдресСервераSMTP = "smtp.gmail.com";

// Порт SMTP сервера
Профиль.ПортSMTP = 465;

Профиль.ИспользоватьSSLSMTP = Истина;

// POP3 сервер
Профиль.АдресСервераIMAP = "imap.gmail.ru";

// Порт POP3 сервера
Профиль.ПортIMAP = 993;

Профиль.ИспользоватьSSLIMAP = Истина;

// Пароль к почтовому ящику
Профиль.Пароль = "Vfhecz122196F";

// Пароль пользователя для SMTP сервера
Профиль.ПарольSMTP = "Vfhecz122196F";

// Логин пользователя
Профиль.Пользователь = "antonina.ttosy@gmail.com";

// Логин пользователя для SMTP сервера
Профиль.ПользовательSMTP = "antonina.ttosy@gmail.com";

// Время ожидания выполнения операции в секундах

Профиль.ВремяОжидания = 50; 
Возврат Профиль;


КонецФункции

&НаСервере
Процедура ОтправитьСообщениеНаСервере(массивИсточниковПривлеченияКлиентов, массивСобытий)
	Почта = Новый ИнтернетПочта;
	Попытка
		Почта.Подключиться(ПолучитьПрофиль());
	Исключение
		Сообщить(ОписаниеОшибки()); 
		Возврат;
	КонецПопытки;
	
			
		АдресаДляОтправки = ПолучитьАдресаДляОтправки(массивИсточниковПривлеченияКлиентов, массивСобытий);
		
		Для Каждого стрАдрес из АдресаДляОтправки Цикл
			
			Сообщение = Новый ИнтернетПочтовоеСообщение;
			
			Сообщение.Отправитель = "antonina.ttosy@gmail.com";
			Сообщение.ИмяОтправителя = "YoEnglish.ru";
			ПочтовыеАдреса = Сообщение.Получатели;
			ПочтовыйАдрес = ПочтовыеАдреса.Добавить();
			ПочтовыйАдрес.Адрес = стрАдрес.Email;
			Сообщение.Тема = ТемаРассылки.Наименование; 
			
			ТекстПриветствия = "Привет, " + стрАдрес.ФИО + "! ";
			
			ИнтернетТекстПочтовогоСообщения = Сообщение.Тексты.Добавить();
			ИнтернетТекстПочтовогоСообщения.Текст = ТекстПриветствия + ТекстРассылки;
			ИнтернетТекстПочтовогоСообщения.ТипТекста = ТипТекстаПочтовогоСообщения.ПростойТекст;
			
			Попытка
				// Пытаемся послать письмо
				Почта.Послать(Сообщение);
			Исключение
				Сообщить(ОписаниеОшибки()); 
				Возврат;
			КонецПопытки;
			
			РегистрыСведений.ОтправленныеСообщения.ЗафиксироватьОтправку(стрАдрес.Ссылка, ТемаРассылки, Истина);

			
		КонецЦикла;
			
	// отключение
	Почта.Отключиться();
КонецПроцедуры

&НаСервере
Функция ПолучитьАдресаДляОтправки(массивИсточниковПривлеченияКлиентов, массивСобытий)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		("ВЫБРАТЬ
		 |	ПотенциальныеКлиенты.Email,
		 |	МИНИМУМ(ПотенциальныеКлиенты.Ссылка) КАК Ссылка
		 |ПОМЕСТИТЬ ВТ_Клиенты
		 |ИЗ
		 |	Справочник.ПотенциальныеКлиенты КАК ПотенциальныеКлиенты
		 |ГДЕ
		 |	ПотенциальныеКлиенты.Источник В(&ИсточникиПривлеченияКлиентов)
		 |	И ПотенциальныеКлиенты.Событие В(&События)
		 |
		 |СГРУППИРОВАТЬ ПО
		 |	ПотенциальныеКлиенты.Email
		 |;
		 |
		 |////////////////////////////////////////////////////////////////////////////////
		 |ВЫБРАТЬ
		 |	ВТ_Клиенты.Email,
		 |	ЕСТЬNULL(ОтправленныеСообщения.Отправлено, ЛОЖЬ) КАК Отправлено,
		 |	ВТ_Клиенты.Ссылка.Наименование КАК ФИО,
		 |	ВТ_Клиенты.Ссылка
		 |ПОМЕСТИТЬ ВТ_Выборка
		 |ИЗ
		 |	ВТ_Клиенты КАК ВТ_Клиенты
		 |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтправленныеСообщения КАК ОтправленныеСообщения
		 |		ПО (ОтправленныеСообщения.ТемаРассылки = &Тема)
		 |			И ВТ_Клиенты.Ссылка = ОтправленныеСообщения.Клиент
		 |;
		 |
		 |////////////////////////////////////////////////////////////////////////////////
		 |ВЫБРАТЬ
		 |	ВТ_Выборка.Email,
		 |	ВТ_Выборка.Отправлено,
		 |	ВТ_Выборка.ФИО,
		 |	ВТ_Выборка.Ссылка
		 |ИЗ
		 |	ВТ_Выборка КАК ВТ_Выборка
		 |ГДЕ
		 |	НЕ ВТ_Выборка.Отправлено");
	
	Запрос.УстановитьПараметр("События", массивСобытий);
	Запрос.УстановитьПараметр("ИсточникиПривлеченияКлиентов", массивИсточниковПривлеченияКлиентов); 
	
	Запрос.УстановитьПараметр("Тема", ТемаРассылки);
	Возврат Запрос.Выполнить().Выгрузить();	
	
КонецФункции


&НаКлиенте
Процедура ОтправитьСообщение(Команда)
	
	МассивИсточниковПривлеченияКлиентов = Новый Массив();
	МассивСобытий						= Новый Массив();
	
	Если ТемаРассылки.Пустая() Тогда 
	ПоказатьОповещениеПользователя("Не выбрана тема рассылки!",,"Рассылка не была отправлена",, СтатусОповещенияПользователя.Важное);
		Возврат;
	КонецЕсли;
	
	Если СписокСобытий.Пустая() Тогда 
	ПоказатьОповещениеПользователя("Не выбрано событие для рассылки!",,"Рассылка не была отправлена",, СтатусОповещенияПользователя.Важное);
		Возврат;
	КонецЕсли;

	
	Если ПустаяСтрока(ТекстРассылки) Тогда 
	ПоказатьОповещениеПользователя("Текст рассылки пустой!",,"Рассылка не была отправлена.",, СтатусОповещенияПользователя.Важное);
		Возврат;
	КонецЕсли;
	
	Если ТекстРассылкиИзменился() Тогда
	 ПоказатьОповещениеПользователя("Текст рассылки не совпадает с текстом в теме рассылки",,"Разберись с этим!",, СтатусОповещенияПользователя.Важное);
		Возврат;
	КонецЕсли;
	

	Для Каждого стрИсточники из СписокИсточниковПривлеченияКлиентов Цикл
		МассивИсточниковПривлеченияКлиентов.Добавить(стрИсточники.Значение);
	КонецЦикла;
	
	Для Каждого стрСобытие из СписокСобытий Цикл
		МассивСобытий.Добавить(стрСобытие.Значение);
	КонецЦикла;
		
	
	Если МассивИсточниковПривлеченияКлиентов.Количество() = 0 Тогда
		ПоказатьОповещениеПользователя("Не выбраны источники привлечения клиентов для рассылки!",,"Рассылка не была отправлена.",, СтатусОповещенияПользователя.Важное);
		Возврат;
	КонецЕсли;
	
	Если МассивСобытий.Количество() = 0 Тогда
		ПоказатьОповещениеПользователя("Не выбраны события для рассылки!",,"Рассылка не была отправлена.",, СтатусОповещенияПользователя.Важное);
		Возврат;	
	КонецЕсли;
	
		
	ОтправитьСообщениеНаСервере(массивИсточниковПривлеченияКлиентов, МассивСобытий);
КонецПроцедуры

&НаКлиенте
Процедура ТемаРассылкиПриИзменении(Элемент)
	ИзменитьТекстРассылки();
КонецПроцедуры

&НаСервере
Процедура ИзменитьТекстРассылки()
	
	ТекстРассылки = ТемаРассылки.ТекстСообщения;
	
КонецПроцедуры

&НаСервере
Функция ТекстРассылкиИзменился()
	Если ТекстРассылки = ТемаРассылки.ТекстСообщения Тогда
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;
КонецФункции



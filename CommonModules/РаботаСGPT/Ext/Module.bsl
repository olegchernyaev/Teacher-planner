
#Область ПрограммныйИнтерфейс

Процедура СгенерироватьСлучайныеПожелания(Пользователь, Дата) Экспорт
	
	Метод = Справочники.МетодыGPT.СлучайноеПожелание;	
	Пожелания = ВыполнитьЗапросGPT(Метод);
	
	Если Пожелания = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Период = Дата;
	
	Для Каждого Пожелание Из Пожелания Цикл		
		РегистрыСведений.СлучайныеПожелания.СоздатьЗапись(Период, Пользователь, Пожелание.message.content);
		Период = Период + 60 * 60 * 24;
	КонецЦикла;		
	
КонецПроцедуры

Процедура СгенерироватьСлучайныеФакты(Дата) Экспорт
	
	Метод = Справочники.МетодыGPT.СлучайныйФакт;	
	Факты = ВыполнитьЗапросGPT(Метод);
	
	Если Факты = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Период = Дата;
	
	Для Каждого Факт Из Факты Цикл		
		РегистрыСведений.СлучайныеФакты.СоздатьЗапись(Период, Факт.message.content);
		Период = Период + 60 * 60 * 24;
	КонецЦикла;		
	
КонецПроцедуры

Функция ВыполнитьЗапросGPT(Метод) Экспорт
	
	Результат = Неопределено;
	
	ИмяСобытия = "РаботаСGPT.ВыполнитьЗапросGPT";
	
	Соединение = УстановитьHTTPСоединение();
	
	Если Соединение = Неопределено Тогда
		Возврат Результат;
	КонецЕсли;
	
	НастройкаМетода = РегистрыСведений.НастройкиВызоваМетодовGPT.НастройкаМетода(Метод);  	
	
	Если НастройкаМетода = Неопределено Тогда		
		ТекстОшибки = "Нет записи в РС НастройкиВызоваМетодовGPT для метода: " + Метод;
		ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Предупреждение, , , ТекстОшибки);
		Возврат Результат;
	КонецЕсли; 
	
	ТекстСообщения = СформироватьТекстСообщения(Метод);	
	Сообщения = СформироватьМассивСообщений(ТекстСообщения);
		
	Данные = Новый Структура;
	Данные.Вставить("model", НастройкаМетода.Модель);
	Данные.Вставить("temperature", НастройкаМетода.УровеньКреативности);
	Данные.Вставить("n", НастройкаМетода.КоличествоВариантовОтвета);
	Данные.Вставить("messages", Сообщения); 
	
	ТелоЗапроса = ЗаписатьДанныеJSON(Данные);
	
	Запрос = HTTPЗапросGPT(НастройкаМетода.АдресРесурса);	
	Запрос.УстановитьТелоИзСтроки(ТелоЗапроса);
	
	Попытка
		
		Ответ = Соединение.ОтправитьДляОбработки(Запрос);
		
		Если Ответ.КодСостояния = 200 Тогда
			Результат = Ответ.ПолучитьТелоКакСтроку();
			Результат = ПрочитатьДанныеJSON(Результат);
		КонецЕсли;
		
		Возврат Результат.choices;
		
	Исключение
		
		ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Ошибка, , , ТекстОшибки);
		Возврат Результат;
		
	КонецПопытки;	
		
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция УстановитьHTTPСоединение()
	
	ИмяСобытия = "РаботаСGPT.УстановитьHTTPСоединение";
	Соединение = Неопределено;
	
	Сервер = Константы.АдресСервераGPT.Получить();
	Таймаут = Константы.ТаймаутGPT.Получить();
	
	Попытка
		
		Соединение = Новый HTTPСоединение(Сервер, , , , , Таймаут, Новый ЗащищенноеСоединениеOpenSSL);
		
	Исключение
		
		ТекстОшибки = Сервер + " " + ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Ошибка, , , ТекстОшибки);
		
	КонецПопытки;
	
	Возврат Соединение;
	
КонецФункции

Функция HTTPЗапросGPT(АдресРесурса)
	
	Заголовки = Новый Соответствие;
	
	Заголовки.Вставить("Content-Type", "application/json");
	Заголовки.Вставить("Authorization", Константы.ТокенАвторизацииGPT.Получить());
	
	Запрос = Новый HTTPЗапрос(АдресРесурса, Заголовки);
	
	Возврат Запрос;
	
КонецФункции

Функция СформироватьТекстСообщения(Метод)
	
	Если Метод = Справочники.МетодыGPT.СлучайноеПожелание Тогда
	
		Шаблон = "%1 Я репетитор английского языка и блогер. Персонализировано напиши случайное пожелание и несколько приятных слов обо мне (Максимум 20 слов)";
		ПодставлятьИмя = ЗначениеЗаполнено(ПараметрыСеанса.ТекущийПользователь.Имя);
		ТекстСообщения = СтрШаблон(Шаблон, ?(ПодставлятьИмя, "Меня зовут " + ПараметрыСеанса.ТекущийПользователь.Имя + ".", "")); 
		
	ИначеЕсли Метод = Справочники.МетодыGPT.СлучайныйФакт Тогда
		
		ТекстСообщения = "Расскажи случайный факт (Максимум 20 слов)";
		
	Иначе
		
		ТекстСообщения = "";
		
	КонецЕсли;
	
	Возврат ТекстСообщения;
		
КонецФункции

Функция СформироватьМассивСообщений(ТекстСообщения)
	
	МассивСообщений = Новый Массив;
		
	Сообщение = СтруктураСообщения();
	Сообщение.content = ТекстСообщения;
	
	МассивСообщений.Добавить(Сообщение);
	
	Возврат МассивСообщений;
	
КонецФункции

Функция СтруктураСообщения()
	
	Сообщение = Новый Структура;
	Сообщение.Вставить("role", "user");
	Сообщение.Вставить("content", "");
	
	Возврат Сообщение;
	
КонецФункции

Функция ЗаписатьДанныеJSON(Данные)
	
	Запись = Новый ЗаписьJSON;
	Запись.УстановитьСтроку();
	ЗаписатьJSON(Запись, Данные);
	Возврат Запись.Закрыть();
	
КонецФункции

Функция ПрочитатьДанныеJSON(Данные)
	
	Чтение = Новый ЧтениеJSON;
	Чтение.УстановитьСтроку(Данные);
	Возврат ПрочитатьJSON(Чтение);
	
КонецФункции

#КонецОбласти